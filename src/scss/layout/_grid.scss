// ==========================================================================
// GRID LAYOUT - Modern Responsive Layout
// ==========================================================================

@use "../abstracts/variables" as *;

// ==========================================================================
// MAIN GRID CONTAINER
// ==========================================================================

.grid {
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "header"
    "main"
    "footer";

  // Ensure proper spacing and overflow handling
  overflow-x: hidden;

  &__header {
    grid-area: header;

    z-index: $z-sticky;
    background-color: $bg-primary;
    border-bottom: 1px solid $gray-200;
  }

  &__main {
    grid-area: main;
    padding: $spacing-3 $spacing-4;

    // Home page - has aside navigation
    &:has(.aside):not(:has(.section)) {
      display: grid;
      grid-template-columns: minmax(280px, 300px) 1fr;
      gap: $spacing-4;
      padding: $spacing-6;
      max-width: none;
      align-items: start;

      .aside {
        height: 100%;
        min-height: calc(100vh - #{$spacing-6} * 2 - 80px);
        position: sticky;
        top: $spacing-6;
      }

      // Natural responsive behavior - grid will collapse when content is too narrow
      @container (max-width: 768px) {
        grid-template-columns: 1fr;

        .aside {
          height: auto;
          min-height: auto;
          position: static;
        }
      }
    }
  }

  &__footer {
    grid-area: footer;
    background-color: $bg-secondary;
    border-top: 1px solid $gray-200;
    padding: $spacing-6 $spacing-4;

    // Responsive footer padding
    @media (min-width: $breakpoint-sm) {
      padding: $spacing-8 $spacing-6;
    }

    @media (min-width: $breakpoint-md) {
      padding: $spacing-8 $spacing-8;
    }
  }
}

// ==========================================================================
// ARTICLE LAYOUT LOGIC
// ==========================================================================

// Home page articles - grid layout when they have aside
.grid__main:has(.aside):not(:has(.section)) .article--active {
  display: grid;
  gap: $spacing-6;

  @media (min-width: $breakpoint-md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: $breakpoint-lg) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// ==========================================================================
// CONTENT CONTAINERS
// ==========================================================================

// ==========================================================================
// RESPONSIVE UTILITIES
// ==========================================================================

// Dashboard Grid Layout
.dashboard-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: $spacing-6;

  @media (min-width: $breakpoint-md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: $breakpoint-lg) {
    grid-template-columns: repeat(3, 1fr);
  }

  @media (min-width: $breakpoint-xl) {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Hide elements on specific breakpoints
.hidden-mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    display: none;
  }
}

.hidden-tablet {
  @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-lg - 1px}) {
    display: none;
  }
}

.hidden-desktop {
  @media (min-width: $breakpoint-lg) {
    display: none;
  }
}

// Show elements only on specific breakpoints
.show-mobile {
  @media (min-width: $breakpoint-sm) {
    display: none;
  }
}

.show-tablet {
  display: none;

  @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-lg - 1px}) {
    display: block;
  }
}

.show-desktop {
  display: none;

  @media (min-width: $breakpoint-lg) {
    display: block;
  }
}
