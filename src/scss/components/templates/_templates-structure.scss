@use "../../abstracts/variables" as *;
@use "sass:color";

// ==========================================================================
// TEMPLATE STRUCTURE COMPONENTS - BEM Architecture
// ==========================================================================

// Template Structure - Main Block
.template-structure {
  background: $white;
  overflow: hidden;
  padding: $spacing-4;
  margin-bottom: $spacing-4;

  // Element: Nested structure container
  &__nested {
    font-family: inherit;
  }

  // Element: Individual level container
  &__level {
    border: 2px solid $gray-300;
    border-radius: $border-radius;
    background: $white;
    margin-bottom: $spacing-3;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    
    // Element: Level title
    &-title {
      font-weight: $font-weight-semibold;
      color: $text-primary;
      background: $gray-100;
      padding: $spacing-3;
      border-bottom: 1px solid $gray-300;
      border-radius: $border-radius-sm $border-radius-sm 0 0;
      margin: -2px -2px $spacing-3 -2px;
    }

    // Modifier: Expandable level
    &--expandable {
      cursor: pointer;
      position: relative;
      
      &::after {
        content: "â–¶";
        position: absolute;
        right: $spacing-3;
        transition: transform 0.2s ease;
      }
      
      // Modifier state: Expanded
      &--expanded::after {
        transform: rotate(90deg);
      }
    }

    // Modifier: Level variations
    &--primary {
      // Topic container - outermost, largest
      border-color: $gray-400;
      padding: $spacing-3;
      
      .template-structure__level-title {
        font-size: $font-size-base;
        background: $gray-100;
      }
    }

    &--secondary {
      // Objective container - nested inside Topic
      margin: $spacing-3;
      border-color: $gray-300;
      
      .template-structure__level-title {
        font-size: calc(#{$font-size-base} * 0.9);
        background: $gray-50;
      }
      
      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transition: all 0.2s ease;
      }
    }

    &--tertiary {
      // Task container - nested inside Objective
      margin: $spacing-3;
      border-color: $gray-200;
      
      .template-structure__level-title {
        font-size: calc(#{$font-size-base} * 0.85);
        background: $gray-50;
        padding: $spacing-2 $spacing-3;
      }
      
      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transition: all 0.2s ease;
      }
    }

    &--quaternary {
      // Content fields - smallest, inside Task
      font-weight: $font-weight-normal;
      color: $text-secondary;
      background: $white;
      border: 1px solid $gray-200;
      font-size: $font-size-xs;
      padding: $spacing-2;
      margin-bottom: $spacing-2;
      box-shadow: none;
      
      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  // Element: Content fields container
  &__content-fields {
    padding: $spacing-3;
    margin-top: 0;
  }
}

// Content Field - Child Block
.content-field {
  margin-bottom: $spacing-1;
  padding: $spacing-1 $spacing-2;
  background: $gray-50;
  border-radius: $border-radius-sm;
  font-size: $font-size-xs;
  color: $text-secondary;
  border-left: 3px solid $gray-300;

  // Modifier: Required field
  &--required {
    border-left-color: $error;
    
    &::after {
      content: " *";
      color: $error;
    }
  }

  // Modifier: Optional field
  &--optional {
    border-left-color: $gray-400;
    opacity: 0.8;
  }

  // Element: Field type indicator
  &__type {
    font-weight: $font-weight-medium;
    color: $text-primary;
  }
}

// Template Builder - Main Block  
.template-builder {
  background: $white;
  border: 1px solid $gray-200;
  border-radius: $border-radius;
  padding: $spacing-6;

  // Element: Builder header
  &__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: $spacing-4;
    padding-bottom: $spacing-4;
    border-bottom: 1px solid $gray-200;
  }

  // Element: Builder title
  &__title {
    margin: 0;
    font-size: $font-size-lg;
    color: $text-primary;
  }

  // Element: Add level button
  &__add-button {
    background: $success;
    color: white;
    border: none;
    padding: $spacing-2 $spacing-3;
    border-radius: $border-radius-sm;
    cursor: pointer;
    font-size: $font-size-sm;
    
    &:hover {
      background: color.scale($success, $lightness: -10%);
    }
  }

  // Element: Controls container
  &__controls {
    display: flex;
    gap: $spacing-2;
    margin-bottom: $spacing-4;
  }
}

// Control Button - Child Block
.control-button {
  padding: $spacing-1 $spacing-2;
  border: 1px solid $gray-300;
  background: $white;
  border-radius: $border-radius-sm;
  cursor: pointer;
  font-size: $font-size-xs;
  color: $text-secondary;
  transition: all 0.2s ease;

  &:hover {
    background: $gray-50;
    border-color: $gray-400;
  }

  // Modifier: Active state
  &--active {
    background: $primary-color;
    color: white;
    border-color: $primary-color;
  }
}

// Hierarchy Item - Main Block for drag/drop
.hierarchy-item {
  // Modifier: Dragging state
  &--dragging {
    opacity: 0.5;
    transform: rotate(2deg);
  }

  // Modifier: Drag over state
  &--drag-over {
    background: rgba($primary-color, 0.1);
    border-left: 4px solid $primary-color;
  }
}

// Template Section - Collapsible Block
.template-section {
  margin-bottom: $spacing-4;

  // Element: Section header
  &__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: $spacing-3;
    background: $gray-50;
    border: 1px solid $gray-200;
    border-radius: $border-radius;
    cursor: pointer;
    
    &:hover {
      background: $gray-100;
    }
  }

  // Element: Section title
  &__title {
    font-weight: $font-weight-medium;
    color: $text-primary;
    margin: 0;
  }

  // Element: Toggle indicator
  &__toggle {
    transition: transform 0.2s ease;
    color: $text-secondary;
  }

  // Element: Section content
  &__content {
    padding: $spacing-4;
    border: 1px solid $gray-200;
    border-top: none;
    border-radius: 0 0 $border-radius $border-radius;
  }

  // Modifier: Collapsed state
  &--collapsed {
    .template-section__toggle {
      transform: rotate(-90deg);
    }
    
    .template-section__content {
      display: none;
    }
  }
}
