// ==========================================================================
// INPUT COMPONENT - BEM Methodology
// ==========================================================================

// Base mixins
@mixin input-focus($border: var(--color-primary-500), $shadow: var(--color-primary-100)) {
    outline: none;
    border-color: $border;
    box-shadow: 0 0 0 3px $shadow;
}

@mixin input-hover($border: var(--color-neutral-400)) {
    &:hover:not(:focus):not(:disabled) {
        border-color: $border;
    }
}

@mixin input-status($color, $bg, $shadow) {
    border-color: $color;
    background-color: $bg;
    &:focus { @include input-focus($color, $shadow); }
}

@mixin control-base {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid var(--color-neutral-300);
    background: var(--color-input-background);
    cursor: pointer;
    transition: all 0.2s ease;
    display: inline-block;
    margin-right: var(--spacing-3);

    &:focus { @include input-focus(); }
    &:hover:not(:disabled):not(:checked) {
        border-color: var(--color-primary-400);
        background: var(--color-primary-50);
    }
    &:checked {
        background: var(--color-primary-500);
        border-color: var(--color-primary-500);
    }
    &:disabled {
        background: var(--color-neutral-100);
        border-color: var(--color-neutral-200);
        opacity: 0.6;
        cursor: not-allowed;
    }
}

.input {
    display: block;
    width: 100%;
    padding: var(--spacing-4) var(--spacing-5);
    font-size: var(--font-size-base);
    font-family: inherit;
    color: var(--color-text-primary);
    background: var(--color-input-background);
    border: 2px solid var(--color-input-border);
    border-radius: var(--border-radius-medium);
    transition: all 0.2s ease;

    &::placeholder {
        color: var(--color-text-tertiary);
        opacity: 1;
    }

    &:focus { @include input-focus(); }
    @include input-hover();

    &:disabled {
        background: var(--color-neutral-100);
        color: var(--color-text-tertiary);
        border-color: var(--color-neutral-200);
        cursor: not-allowed;
    }

    // Status states
    &--error { @include input-status(var(--color-error-500), var(--color-error-50), var(--color-error-100)); }
    &--success { @include input-status(var(--color-success-500), var(--color-success-50), var(--color-success-100)); }

    // Auth inputs
    &--auth {
        padding-left: 3rem;
        position: relative;
    }

    // Search input
    &--search {
        padding: var(--spacing-3) var(--spacing-4);
        border: 1px solid var(--color-neutral-200);
        border-radius: var(--radius-large);
        font-size: var(--font-size-sm);
        
        &::placeholder { font-style: italic; }
        &:focus { border-color: var(--color-primary-300); }
        &:hover:not(:focus) { border-color: var(--color-neutral-300); }
    }

    // Number input
    &--number {
        padding-right: var(--spacing-6);
        
        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
            -webkit-appearance: auto;
            opacity: 1;
        }
    }

    // Checkbox
    &--checkbox {
        @include control-base;
        border-radius: var(--border-radius-small);
        position: relative;
        
        &:checked::after {
            content: '';
            position: absolute;
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: 2px solid white;
            border-left: 0;
            border-top: 0;
            transform: rotate(45deg);
        }
    }

    // Radio
    &--radio {
        @include control-base;
        border-radius: 50%;
        position: relative;
        
        &:checked::after {
            content: '';
            position: absolute;
            left: 50%;
            top: 50%;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: white;
            transform: translate(-50%, -50%);
        }
    }

    // File input
    &--file {
        cursor: pointer;
        background: var(--color-primary-50);
        border: 2px dashed var(--color-primary-300);
        padding: var(--spacing-4);
        text-align: center;
        min-height: 50px;
        max-width: 24rem;
        display: flex;
        align-items: center;
        justify-content: center;
        
        &::-webkit-file-upload-button,
        &::file-selector-button { display: none; }
        
        &::before {
            content: 'Upload file';
            color: var(--color-primary-600);
        }
        
        &:hover {
            border-color: var(--color-primary-400);
            background: var(--color-primary-100);
        }
        
        &:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
    }

    // Date/time inputs
    &--date,
    &--time {
        cursor: pointer;
        
        &::-webkit-calendar-picker-indicator {
            opacity: 0;
            position: absolute;
            right: 0;
            width: 100%;
            height: 100%;
        }
    }

    // Color input
    &--color {
        width: 60px;
        height: 40px;
        padding: 4px;
        cursor: pointer;
        
        &::-webkit-color-swatch-wrapper,
        &::-webkit-color-swatch,
        &::-moz-color-swatch {
            border: none;
            border-radius: var(--border-radius-small);
        }
    }

    // Range input
    &--range {
        height: 10px;
        padding: 0;
        border-radius: 5px;
        appearance: none;
        background: linear-gradient(to right, var(--color-primary-300), var(--color-neutral-300));
        cursor: pointer;
    }

    // Select input
    &--select {
        cursor: pointer;
        background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 12px center;
        background-size: 16px;
        padding-right: 40px;
        appearance: none;
    }

    // Textarea
    &--textarea {
        resize: both; // Allow both horizontal and vertical resize
        min-height: 80px;
        min-width: 200px; // Minimum reasonable width
        
        // Override width for positioned textareas (text tool)
        &[style*="position: absolute"] {
            width: 240px; // More reasonable default width
            max-width: 400px; // Prevent oversized textareas
        }
        
        position: absolute;
        z-index: 1000;
        
        &.auto-resize { transition: height 0.1s ease; }
    }

    // Text input for course builder
    &--text {
        position: absolute;
        z-index: 1000;
        min-width: 200px;
        min-height: 40px;
        resize: both;
        background: transparent;
        border: 1px solid var(--color-primary-300);
        border-radius: var(--border-radius-small);
        padding: var(--spacing-2) var(--spacing-3);
        font-size: var(--font-size-base);
        font-family: inherit;
        color: var(--color-text-primary);
        
        &::placeholder {
            color: var(--color-text-tertiary);
            opacity: 0.8;
        }
        
        &:focus {
            outline: none;
            border-color: var(--color-primary-500);
            box-shadow: 0 0 0 2px var(--color-primary-100);
            background: rgba(255, 255, 255, 0.9);
        }
        
        &:hover:not(:focus) {
            border-color: var(--color-primary-400);
            background: rgba(255, 255, 255, 0.5);
        }
    }



    // Status combinations for controls
    &--checkbox.input--error,
    &--radio.input--error {
        border-color: var(--color-error-500);
        &:checked { background: var(--color-error-500); }
    }

    &--checkbox.input--success,
    &--radio.input--success {
        border-color: var(--color-success-500);
        &:checked { background: var(--color-success-500); }
    }
}